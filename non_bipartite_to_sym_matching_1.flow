c =================================================================================================
c  R. M. Deak                  non_bipartite_to_sym_matching_1.flow                    2014-07-09
c =================================================================================================
c
c  The goal of this flow file is to illustrate how to take a non-bipartite graph and run a min-cost 
c  max flow on it to produce a minimal cost matching.
c 
c   cat non_bipartite_to_sym_matching_1.flow                      \
c     | cs2 2>/dev/null                                           \
c     | determine-matches.sh 0 1                                  \
c     | grep -vP '^((0|1|4|5|8|9)\s+\d+)|(\d+\s+(0|1|4|5|8|9))$'
c
c  NODE LABELS:
c      s  = 0
c      t  = 1
c      1o = 2
c      2i = 3
c      2g = 4
c      2d = 5
c      2o = 6
c      3i = 7
c      3g = 8
c      3d = 9
c      3o = 10
c      4i = 11

c -------------------------------------------------------------------------------------------------
c  12 nodes, 19 arcs.  Total flow expected flow is the maximium of:
c
c   1) sum of the outbound match limits
c   2) sum of the inbound match limits
c
c  TODO: clean up sloppy capacity.
c -------------------------------------------------------------------------------------------------
p min 12 19
n 0 20
n 1 -20

c -------------------------------------------------------------------------------------------------
c  Outbound Match limits
c -------------------------------------------------------------------------------------------------

c user 1 match limit = 3
a 0 2 0 3 0

c user 2 match limit = 3
a 0 4 0 3 0
a 3 4 0 3 0
a 4 5 0 3 0
a 5 6 0 3 0
a 5 1 0 3 0

c user 3 match limit = 3
a 0 8 0 3 0
a 7 8 0 3 0
a 8 9 0 3 0
a 9 10 0 3 0
a 9 1 0 3 0

c user 4 match limit = 3
a 11 1 0 3 0

c -------------------------------------------------------------------------------------------------
c  Scored dyads
c -------------------------------------------------------------------------------------------------

a 2 3 0 1 -1
a 2 7 0 1 -1
a 2 11 0 1 -1

a 6 7 0 1 -1
a 6 11 0 1 -1

a 10 11 0 1 -1

c -------------------------------------------------------------------------------------------------
c  Overflow.  This should have capacity equal to the total flow specified 
c -------------------------------------------------------------------------------------------------
a 0 1 0 20 0
